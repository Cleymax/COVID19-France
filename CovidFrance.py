#!/usr/bin/env python
# coding: utf-8

# Twitter: @xrths
# www.xrths.fr

# Importation des librairies.
import sys
from datetime import datetime

from modules.APIEngine import get_data
from modules.ConfigEngine import get_config
from modules.GraphEngine import make_graph, save_graph_data
from modules.MathsEngine import calc_percentage, save_worldometers_data, save_gouv_data, calc_difference, check_data_change
from modules.TimeEngine import check_time, get_days
from modules.TwitterEngine import twitter_auth, get_last_tweet

api, auth = twitter_auth()  # API TWEEPY
directory = get_config('System', 'directory')
graph_img = directory + "data/graphIMG.png"
log_time = "[" + datetime.now().strftime("%D %H:%M:%S") + "] "

# ----------------------------------#

if check_time():  # On v√©rifie le cr√©neau horaire si activ√© dans le fichier config.ini
    pass
else:
    sys.exit()

# ----------------------------------#

if get_last_tweet() == 1:  # On v√©rifie que le bot n'a pas d√©j√† post√© aujourd'hui
    print(log_time + "Un tweet post√© avec l'application [" + get_config('TwitterAPI', 'app_name') + "] existe d√©j√† pour aujourd'hui !")
    sys.exit()
elif get_last_tweet() == 0:
    print(log_time + "Aucun tweet n'a √©t√© post√© aujourd'hui, suite du programme...")
else:
    print(log_time + "Erreur.")
    sys.exit()

# ----------------------------------#

gouv_data = get_data("GOUVERNEMENT")  # On r√©cup√®re les donn√©es du gouvernement

# ----------------------------------#

if gouv_data is not None:  # Si elles sont valides
    check_data_change()  # On v√©rifie quelles sont un minimum coh√©rentes
    worldometers_data = get_data("WORLDOMETERS")
else:
    print(log_time + "Aucune donn√©e pour aujourd'hui ! (Source: Gouvernement)\n")
    sys.exit()

# ----------------------------------#

difference_data = calc_difference()  # On fait les calculs de toutes les donn√©es
percentage_data = calc_percentage()  # On r√©cup√®re les pourcentages


def format_data(data):
    return str("{0:,}".format(data))


print("\n----------------------------------------\n")

# ----------------------------------#

# On met en forme les deux tweets
first_tweet_form = str("‚Ä™La üá´üá∑ est confin√©e depuis:"
                       + "\n" + get_days() + " jours"
                       + "\n"
                       + "\n" + "üü© " + format_data(gouv_data['casGueris']) + " gu√©ris " + percentage_data[
                           'casGueris'] + " " + difference_data['casGueris']
                       + "\n" + "üüß " + format_data(gouv_data['casMalades']) + " malades " + difference_data[
                           'casMalades_GOUV']
                       + "\n" + "üü• " + "dont " + format_data(gouv_data['casReanimation']) + " cas graves " +
                       difference_data['casReanimation']
                       + "\n" + "‚¨õ " + format_data(gouv_data['totalDeces']) + " morts " + percentage_data[
                           'totalDeces'] + " " + difference_data['totalDeces']
                       + "\n"
                       + "\n" + "‚Ä™‚óæÔ∏è " + format_data(gouv_data['decesHopital']) + " en h√¥pitaux " + difference_data[
                           'decesHopital']
                       + "\n" + "‚Ä™‚óæÔ∏è " + format_data(gouv_data['decesEhpad']) + " en ESMS " + difference_data[
                           'decesEhpad']
                       + "\n"
                       + "\n" + "‚Ä™ ü¶† ‚Äî " + format_data(gouv_data['casConfirmes']) + " cas " + difference_data[
                           'casConfirmes']
                       + "\n"
                       + "\n" + "‚Ä™Graphique üìà ‚Äî ‚¨áÔ∏è‚Ä¨ "
                       + "\n" + "#ConfinementJour" + get_days() + " | #COVID19")

second_tweet_img = str(
    "üè† " + format_data(gouv_data['casEhpad']) + " cas en EHPAD" + " " + difference_data['casEhpad']
    + "\n" + "üõè " + format_data(gouv_data['casHopital']) + " hospitalis√©s" + " " + difference_data['casHopital']
    + "\n" + "üî¨ " + format_data(worldometers_data['totalTests']) + " d√©pistages"
    + "‚Ä™\n" + ""
    + "‚Ä™\n" + "üìà √âvolution #graphique du #COVID19 en #France‚Ä¨")

print(first_tweet_form)
print("\n------------------\n")
print(second_tweet_img)

print("\n----------------------------------------\n")

# input("\n----------------------------------------\nPressez ENTRER pour valider le tweet [...]") #D√©commenter pour utiliser le bot manuellement

# ----------------------------------#
# On sauvegarde toutes les donn√©es
save_graph_data(gouv_data['casConfirmes'], gouv_data['casHopital'], gouv_data['casReanimation'],
                gouv_data['totalDeces'],
                gouv_data['casGueris'])
print(log_time + "Donn√©es du graphique mises √† jours !")

save_gouv_data(gouv_data)
print(log_time + "Donn√©es du gouvernement sauvegard√©es !")

save_worldometers_data(worldometers_data)
print(log_time + "Donn√©es de Worldometers sauvegard√©es !")

make_graph()  # On g√©n√®re le graphique
print(log_time + "Graphique g√©n√©r√© !")

# ----------------------------------#
# On tweet
posted_tweet = api.update_status(first_tweet_form)

api.update_with_media(graph_img, second_tweet_img, in_reply_to_status_id=posted_tweet.id, retry_count=10, retry_delay=5, retry_errors={503})

# On envoie le lien du tweet sur le compte priv√© du propri√©taire
api.send_direct_message(recipient_id=get_config('TwitterAPI', 'preview_id'), text="https://twitter.com/" + get_config('TwitterAPI', 'account_name') + "/status/" + str(posted_tweet.id))
