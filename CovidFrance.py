#!/usr/bin/env python
# coding: utf-8

# Twitter: @xrths
# www.xrths.fr

# Importation des librairies.
import os
import sys

sys.path.insert(0, os.path.dirname(os.path.realpath(__file__)) + '/modules')

from APIEngine import *
from GraphEngine import *
from MathsEngine import *
from TwitterEngine import *
from TimeEngine import *
from ConfigEngine import *

api, auth = twitter_auth()  # API TWEEPY
directory = os.path.join(os.path.dirname(__file__), '../config.ini')
graphIMG = directory + "data/graphIMG.png"
LogTime = "[" + datetime.now().strftime("%D %H:%M:%S") + "] "

# ----------------------------------#

if check_time():  # On v√©rifie le cr√©neau horaire si activ√© dans le fichier config.ini
    pass
else:
    sys.exit()

# ----------------------------------#

if get_last_tweet() == 1:  # On v√©rifie que le bot n'a pas d√©j√† post√© aujourd'hui
    print(LogTime + "Un tweet post√© avec l'application [" + get_config('TwitterAPI',
                                                                       'app_name') + "] existe d√©j√† pour aujourd'hui !")
    sys.exit()
elif get_last_tweet() == 0:
    print(LogTime + "Aucun tweet n'a √©t√© post√© aujourd'hui, suite du programme...")
else:
    print(LogTime + "Erreur.")
    sys.exit()

# ----------------------------------#

gouvData = get_data("GOUVERNEMENT")  # On r√©cup√®re les donn√©es du gouvernement

# ----------------------------------#

if gouvData != None:  # Si elles sont valides
    check_data_change()  # On v√©rifie quelles sont un minimum coh√©rentes
    worldometersData = get_data(
        "WORLDOMETERS")  # Si c'est bon, on r√©cup√®re les donn√©es de Worldometers (je l'ai mis ici pour √©viter de spam l'api et de se faire ban-ip)
else:
    print(LogTime + "Aucune donn√©e pour aujourd'hui ! (Source: Gouvernement)\n")
    sys.exit()

# ----------------------------------#

difference_data = calc_difference()  # On fait les calculs de toutes les donn√©es
percentage_data = percentage_calc()  # On r√©cup√®re les pourcentages

print("\n----------------------------------------\n")

def format_data(data):
    return str("{0:,}".format(data))

# ----------------------------------#

# On met en forme les deux tweets
first_tweet_form = str("‚Ä™La üá´üá∑ est confin√©e depuis:"
                       + "\n" + get_days() + " jours"
                       + "\n"
                       + "\n" + "üü© " + format_data(gouvData['casGueris']) + " gu√©ris " + percentage_data[
                           'casGueris'] + " " + difference_data['casGueris']
                       + "\n" + "üüß " + format_data(gouvData['casMalades']) + " malades " + difference_data[
                           'casMalades_GOUV']
                       + "\n" + "üü• " + "dont " + format_data(gouvData['casReanimation']) + " cas graves " +
                       difference_data['casReanimation']
                       + "\n" + "‚¨õ " + format_data(gouvData['totalDeces']) + " morts " + percentage_data[
                           'totalDeces'] + " " + difference_data['totalDeces']
                       + "\n"
                       + "\n" + "‚Ä™‚óæÔ∏è " + format_data(gouvData['decesHopital']) + " en h√¥pitaux " +
                       difference_data['decesHopital']
                       + "\n" + "‚Ä™‚óæÔ∏è " + format_data(gouvData['decesEhpad']) + " en ESMS " + difference_data[
                           'decesEhpad']
                       + "\n"
                       + "\n" + "‚Ä™ ü¶† ‚Äî " + format_data(gouvData['casConfirmes']) + " cas " + difference_data[
                           'casConfirmes']
                       + "\n"
                       + "\n" + "‚Ä™Graphique üìà ‚Äî ‚¨áÔ∏è‚Ä¨ "
                       + "\n" + "#ConfinementJour" + get_days() + " | #COVID19")

second_tweet_form = str(
    "üè† " + format_data(gouvData['casEhpad']) + " cas en EHPAD" + " " + difference_data['casEhpad']
    + "\n" + "üõè " + format_data(gouvData['casHopital']) + " hospitalis√©s" + " " + difference_data['casHopital']
    + "\n" + "üî¨ " + format_data(worldometersData['totalTests']) + " d√©pistages"
    + "‚Ä™\n" + ""
    + "‚Ä™\n" + "üìà √âvolution #graphique du #COVID19 en #France‚Ä¨")

print(first_tweet_form)
print("\n------------------\n")
print(second_tweet_form)

print("\n----------------------------------------\n")

# input("\n----------------------------------------\nPressez ENTRER pour valider le tweet [...]") #D√©commenter pour utiliser le bot manuellement

# ----------------------------------#
# On sauvegarde toutes les donn√©es
save_data_graph(gouvData['casConfirmes'], gouvData['casHopital'], gouvData['casReanimation'], gouvData['totalDeces'],
                gouvData['casGueris'])
print(LogTime + "Donn√©es du graphique mises √† jours !")

save_gouv_data(gouvData)
print(LogTime + "Donn√©es du gouvernement sauvegard√©es !")

save_worldometers_data(worldometersData)
print(LogTime + "Donn√©es de Worldometers sauvegard√©es !")

make_graph()  # On g√©n√®re le graphique
print(LogTime + "Graphique g√©n√©r√© !")

# ----------------------------------#
# On tweet
tweet_post = api.update_status(first_tweet_form)

api.update_with_media(graphIMG, second_tweet_form, in_reply_to_status_id=tweet_post.id, retry_count=10, retry_delay=5,
                      retry_errors={503})

# On envoie le lien du tweet sur le compte priv√© du propri√©taire
api.send_direct_message(recipient_id=get_config('TwitterAPI', 'preview_id'),
                        text="https://twitter.com/" + get_config('TwitterAPI', 'account_name') + "/status/" + str(
                            tweet_post.id))
